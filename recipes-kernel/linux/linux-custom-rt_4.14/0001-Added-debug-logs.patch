From 95f5753b213093bbc876eb1cf38358995a45d7e7 Mon Sep 17 00:00:00 2001
From: Auto Configured <auto.configured>
Date: Sun, 4 Nov 2018 10:35:55 +0100
Subject: [PATCH] Added debug logs

---
 drivers/spi/spidev.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/spi/spidev.c b/drivers/spi/spidev.c
index b112039..9842282 100644
--- a/drivers/spi/spidev.c
+++ b/drivers/spi/spidev.c
@@ -364,6 +364,9 @@ spidev_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 	if (spi == NULL)
 		return -ESHUTDOWN;
 
+	// ;+
+	dev_dbg(&spi->dev, "cmd = %d\n", cmd);
+
 	/* use the buffer lock here for triple duty:
 	 *  - prevent I/O (from us) so calling spi_setup() is safe;
 	 *  - prevent concurrent SPI_IOC_WR_* from morphing
@@ -396,10 +399,16 @@ spidev_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 	/* write requests */
 	case SPI_IOC_WR_MODE:
 	case SPI_IOC_WR_MODE32:
+  	// ;+
+	dev_dbg(&spi->dev, "wr cmd = %d\n", cmd);
+	
 		if (cmd == SPI_IOC_WR_MODE)
 			retval = get_user(tmp, (u8 __user *)arg);
 		else
 			retval = get_user(tmp, (u32 __user *)arg);
+ 		// ;+
+		dev_dbg(&spi->dev, "wr cmd = %d, user ret = %d\n", cmd, retval);
+	
 		if (retval == 0) {
 			u32	save = spi->mode;
 
@@ -411,6 +420,10 @@ spidev_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 			tmp |= spi->mode & ~SPI_MODE_MASK;
 			spi->mode = (u16)tmp;
 			retval = spi_setup(spi);
+			
+			// ;+
+			dev_dbg(&spi->dev, "wr cmd = %d, setup ret = %d\n", cmd, retval);
+		
 			if (retval < 0)
 				spi->mode = save;
 			else
-- 
2.7.4

